# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches: [ "master" ]
  workflow_dispatch:
env:
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
jobs:
  build:
    runs-on: macos-latest
    env:
      EP_GH_IGNORE_TIME: true
      APPLE_ID: ${{ secrets.APPLE_ID }}
      APPLE_ID_PASS: ${{ secrets.APPLE_ID_PASS }}
    steps:
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: "14.19.3"
        cache: 'yarn'
    # - run: sudo rm -rf node_modules && yarn install --immutable --immutable-cache --check-cache
    - name: Build/release Electron app
      uses: samuelmeuli/action-electron-builder@v1.6.0
      with:
        mac_certs: ${{ secrets.MAC_CERTS }}
        mac_certs_password: ${{ secrets.MAC_CERTS_PASSWORD }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
        release: true
    - name: check content
      run: |
          cd build
          ls
    # - name: Release
    #   uses: softprops/action-gh-release@v1
    #   env:
    #     GITHUB_REPOSITORY: Synth-PoC/Synth-electron
    #   with:
    #     tag_name: "v1"
    #     draft: true
    #     prerelease: false
    #     token: ${{ secrets.GH_TOKEN }}
    #     repository: 'Synth-PoC/Synth-electron'
    #     files: |
    #       ./build/*.yml
    #       ./build/*.blockmap
    #       ./build/*.dmg
    - name: Release
      uses: ncipollo/release-action@v1
      with:
        tag: "latest"
        artifacts: "./build/*.yml,./build/*.blockmap, ./build/*.dmg"
        token: ${{ secrets.GH_TOKEN }}
        owner: "Synth-PoC"
        repo: "synth-release-server"
        draft: true

    